<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>61.0</apiVersion>
    <assignments>
        <name>AssignMember</name>
        <label>Assign Member</label>
        <locationX>468</locationX>
        <locationY>974</locationY>
        <assignmentItems>
            <assignToReference>GroupMemberIDs</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>LoopQueueMember.UserOrGroupId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>LoopQueueMember</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Check_Metadata</name>
        <label>Check Metadata</label>
        <locationX>578</locationX>
        <locationY>542</locationY>
        <defaultConnectorLabel>Metadata = Null</defaultConnectorLabel>
        <rules>
            <name>MetadataNotNull</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetAssignedQueuefromMetadata_TOPCustomerNotOtherProducts</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>getQueue</targetReference>
            </connector>
            <label>Metadata =! Null</label>
        </rules>
    </decisions>
    <decisions>
        <name>CheckAuthorizeUser</name>
        <label>Check Authorize User</label>
        <locationX>380</locationX>
        <locationY>1166</locationY>
        <defaultConnector>
            <targetReference>CanNotAcceptRequestForm</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>User ID Is not in Queue</defaultConnectorLabel>
        <rules>
            <name>UserIdIsInQueue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GroupMemberIDs</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>$User.Id</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AcceptLead</targetReference>
            </connector>
            <label>User Id Is In Queue</label>
        </rules>
    </decisions>
    <decisions>
        <name>CheckMetadata</name>
        <label>CheckMetadata</label>
        <locationX>578</locationX>
        <locationY>242</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>TOPCustomerProductNotOtherProducts</name>
            <conditionLogic>(1 OR 2) AND (3 OR 4 OR 5 OR 6) AND 7 AND 8</conditionLogic>
            <conditions>
                <leftValueReference>GetRequestFromItem.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>CustomerInitial</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetRequestFromItem.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>CustomerExtend</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetRequestFromItem.SalesOrganizationTOP__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>1100</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetRequestFromItem.SalesOrganizationTOP__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>1300</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetRequestFromItem.SalesOrganizationTOP__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>1400</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetRequestFromItem.SalesOrganizationTOP__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>1700</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetRequestFromItem.InterestedProductTypeAsCustomerTOP__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetRequestFromItem.InterestedProductTypeAsCustomerTOP__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Other Products</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetAssignedQueuefromMetadata_TOPCustomerNotOtherProducts</targetReference>
            </connector>
            <label>TOP Customer Product != Other Products</label>
        </rules>
        <rules>
            <name>TOPCustomerProductIsOtherProducts</name>
            <conditionLogic>(1 OR 2) AND (3 OR 4 OR 5 OR 6) AND 7 AND 8</conditionLogic>
            <conditions>
                <leftValueReference>GetRequestFromItem.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>CustomerInitial</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetRequestFromItem.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>CustomerExtend</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetRequestFromItem.SalesOrganizationTOP__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>1100</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetRequestFromItem.SalesOrganizationTOP__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>1300</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetRequestFromItem.SalesOrganizationTOP__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>1400</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetRequestFromItem.SalesOrganizationTOP__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>1700</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetRequestFromItem.InterestedProductTypeAsCustomerTOP__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetRequestFromItem.InterestedProductTypeAsCustomerTOP__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Other Products</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetAssignedQueuefromMetadata_TOPCustomerIsOtherProducts</targetReference>
            </connector>
            <label>TOP Customer Product = Other Products</label>
        </rules>
        <rules>
            <name>TOPSupplierProductIsAll</name>
            <conditionLogic>(1 OR 2) AND (3 OR 4) AND 5</conditionLogic>
            <conditions>
                <leftValueReference>GetRequestFromItem.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>SupplierInitial</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetRequestFromItem.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>SupplierExtend</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetRequestFromItem.PurchasingOrganizationTOP__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>1100</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetRequestFromItem.CompanyCodeTOP__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>1700</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetRequestFromItem.InterestedProductTypeAsSupplierTOP__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetAssignedQueuefromMetadata_TOPSupplierIsAllProducts</targetReference>
            </connector>
            <label>TOP Supplier Product = All</label>
        </rules>
        <rules>
            <name>TXCustomerSupplierProductIsAll</name>
            <conditionLogic>(1 OR 2 OR 3 OR 4) AND (5 OR 6 OR 7 OR 8 OR 9 OR 10 OR 11 OR 12 OR 13 OR 14) AND (15 OR 16)</conditionLogic>
            <conditions>
                <leftValueReference>GetRequestFromItem.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>CustomerInitial</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetRequestFromItem.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>CustomerExtend</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetRequestFromItem.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>SupplierInitial</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetRequestFromItem.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>SupplierExtend</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetRequestFromItem.SalesOrganizationTX__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>2000</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetRequestFromItem.SalesOrganizationTX__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>9100</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetRequestFromItem.SalesOrganizationTX__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>9200</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetRequestFromItem.SalesOrganizationTX__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>9300</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetRequestFromItem.SalesOrganizationTX__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>9400</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetRequestFromItem.PurchasingOrganizationTX__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>A000</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetRequestFromItem.PurchasingOrganizationTX__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>H100</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetRequestFromItem.PurchasingOrganizationTX__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>I100</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetRequestFromItem.PurchasingOrganizationTX__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>N100</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetRequestFromItem.PurchasingOrganizationTX__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>S100</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetRequestFromItem.InterestedProductTypeAsCustomerTX__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetRequestFromItem.InterestedProductTypeAsSupplierTX__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetAssignedQueuefromMetadata_TXCustomerORSupplierIsAllProduct</targetReference>
            </connector>
            <label>TX Customer/Supplier Product = All</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <name>CountryFormula</name>
        <dataType>String</dataType>
        <expression>IF({!GetRequestFromItem.CTRRequestFormHeader__r.Country__r.Code__c}=&quot;TH&quot;,&quot;Domestic&quot;, &quot;International&quot;)</expression>
    </formulas>
    <interviewLabel>CTRButtonAcceptRequestForm {!$Flow.CurrentDateTime}</interviewLabel>
    <label>CTRButtonAcceptRequestForm</label>
    <loops>
        <name>LoopQueueMember</name>
        <label>Loop Queue Member</label>
        <locationX>380</locationX>
        <locationY>866</locationY>
        <collectionReference>GetQueueMember</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>AssignMember</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>CheckAuthorizeUser</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordLookups>
        <name>GetAssignedQueuefromMetadata_TOPCustomerIsOtherProducts</name>
        <label>Get Assigned Queue from Metadata</label>
        <locationX>314</locationX>
        <locationY>350</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_Metadata</targetReference>
        </connector>
        <filterLogic>1 AND 2 AND 3 AND 4</filterLogic>
        <filters>
            <field>RequestFormRecordType__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetRequestFromItem.RecordType.DeveloperName</elementReference>
            </value>
        </filters>
        <filters>
            <field>Organization__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetRequestFromItem.SalesOrganizationTOP__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Country__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>CountryFormula</elementReference>
            </value>
        </filters>
        <filters>
            <field>Product__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetRequestFromItem.InterestedProductTypeAsCustomerTOP__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CTRAssignRequestItemOwner__mdt</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetAssignedQueuefromMetadata_TOPCustomerNotOtherProducts</name>
        <label>Get Assigned Queue from Metadata</label>
        <locationX>50</locationX>
        <locationY>350</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_Metadata</targetReference>
        </connector>
        <filterLogic>1 AND 2 AND 3 AND 4</filterLogic>
        <filters>
            <field>RequestFormRecordType__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetRequestFromItem.RecordType.DeveloperName</elementReference>
            </value>
        </filters>
        <filters>
            <field>Organization__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetRequestFromItem.SalesOrganizationTOP__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Country__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>CountryFormula</elementReference>
            </value>
        </filters>
        <filters>
            <field>Product__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetRequestFromItem.InterestedProductTypeAsCustomerTOP__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CTRAssignRequestItemOwner__mdt</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetAssignedQueuefromMetadata_TOPSupplierIsAllProducts</name>
        <label>Get Assigned Queue from Metadata</label>
        <locationX>578</locationX>
        <locationY>350</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_Metadata</targetReference>
        </connector>
        <filterLogic>1 AND (2 OR 3) AND 4 AND 5</filterLogic>
        <filters>
            <field>RequestFormRecordType__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetRequestFromItem.RecordType.DeveloperName</elementReference>
            </value>
        </filters>
        <filters>
            <field>Organization__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetRequestFromItem.PurchasingOrganizationTOP__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Organization__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetRequestFromItem.CompanyCodeTOP__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Country__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>CountryFormula</elementReference>
            </value>
        </filters>
        <filters>
            <field>Product__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetRequestFromItem.InterestedProductTypeAsSupplierTOP__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CTRAssignRequestItemOwner__mdt</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetAssignedQueuefromMetadata_TXCustomerORSupplierIsAllProduct</name>
        <label>Get Assigned Queue from Metadata</label>
        <locationX>842</locationX>
        <locationY>350</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_Metadata</targetReference>
        </connector>
        <filterLogic>1 AND 2 AND 3</filterLogic>
        <filters>
            <field>RequestFormRecordType__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetRequestFromItem.RecordType.DeveloperName</elementReference>
            </value>
        </filters>
        <filters>
            <field>Organization__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetRequestFromItem.SalesOrganizationTX__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Organization__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetRequestFromItem.PurchasingOrganizationTX__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CTRAssignRequestItemOwner__mdt</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>getQueue</name>
        <label>get Queue</label>
        <locationX>380</locationX>
        <locationY>650</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetQueueMember</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetAssignedQueuefromMetadata_TOPCustomerNotOtherProducts.QueueDeveloperName__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetQueueMember</name>
        <label>Get Queue Member</label>
        <locationX>380</locationX>
        <locationY>758</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>LoopQueueMember</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>GroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>getQueue.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>GroupMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetRequestFromItem</name>
        <label>GetRequestFromItem</label>
        <locationX>578</locationX>
        <locationY>134</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>CheckMetadata</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CTRRequestFormItem__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>UpdateOwnerinRequestForm</name>
        <label>Update Owner in Request Form</label>
        <locationX>248</locationX>
        <locationY>1382</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </inputAssignments>
        <object>CTRRequestFormItem__c</object>
    </recordUpdates>
    <screens>
        <name>AcceptLead</name>
        <label>AcceptLead</label>
        <locationX>248</locationX>
        <locationY>1274</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <backButtonLabel>Cancel</backButtonLabel>
        <connector>
            <targetReference>UpdateOwnerinRequestForm</targetReference>
        </connector>
        <fields>
            <name>AcceptRequestForm</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;Are you sure you want to accept this request form.&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;Company Name : {!GetRequestFromItem.Customer__r.Name}&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;Request Form Number : {!GetRequestFromItem.Name}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <nextOrFinishButtonLabel>Accept</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>CanNotAcceptRequestForm</name>
        <label>CanNotAcceptRequestForm</label>
        <locationX>512</locationX>
        <locationY>1274</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>CannotAccept</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;You &lt;strong style=&quot;color: rgb(234, 1, 1);&quot;&gt;don&apos;t have authorization&lt;/strong&gt; to Accept this request form.&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;This request form belongs to {!GetRequestFromItem.Owner:Group.DeveloperName}.&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;Please contact the administrator.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <nextOrFinishButtonLabel>Acknowledge</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <start>
        <locationX>452</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>GetRequestFromItem</targetReference>
        </connector>
    </start>
    <status>Draft</status>
    <variables>
        <name>GroupMemberIDs</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
